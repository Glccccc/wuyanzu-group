from collections.abc import Iterable

def product(numbers: Iterable[float]) -> float:
    
    """Рекурсивная функция, которая возвращает произведение чисел"""
    
    if not numbers:
        return 1.0
    elif 0 in numbers:
        return 0.0    
    else:
        return float(numbers[0] * product(numbers[1:]))


# >>> product([10,20,30])
# 6000.0
# >>> product((0.12, 0.05, -0.09, 0.0, 0.21))
# 0.0
# >>> product(range(10, 60, 20))
# 15000.0
# >>> product(())
# 1.0
# >>> product([])
# 1.0
# >>> product([10.23])
# 10.23
# >>> product([0])
# 0.0

# 0!=1 (факториал нуля равен единице). В математике  «произведение» без каких-либо факторов оценивается как 1. 
# Допущение «произведения» с нулевыми факторами уменьшает количество случаев, которые необходимо учитывать во многих математических формулах. 
# Такой «продукт» является естественной отправной точкой в ​​индукционных доказательствах, а также в алгоритмах. 
# По этим причинам соглашение «пустой продукт равен единице» является обычной практикой в ​​математике и компьютерном программировании.
# Исходя из этого рекурсивная функция в случаях когда переданный аргумент пуст возвращает 1.
